"use strict";var ngar=angular.module("angularGapiAnalyticsreporting",[]);ngar.run(function(){}),ngar.factory("ngar",["ngarLoadService","ngarAuthService","ngarManagementService","ngarReportService","ngarDataService",function(a,b,c,d,e){return{init:function(){return a.loadAllApis().then(b.initAuth).then(function(){return b.status.signedIn?c.init():!1})["catch"](function(a){})},signIn:function(){return b.signIn().then(c.init)},signOut:function(){return b.signOut()},get:function(a){var b=d.buildRequest(a);return d.getData(window.gapi,b).then(e.parseData)["catch"](function(a){})}}}]),ngar.directive("ngarSignedIn",["ngarAuthService",function(a){return{restrict:"A",link:function(b,c){b.$watch(function(){return a.status.signedIn&&a.status.authInitialized},function(a){a?c.removeClass("ng-hide"):c.addClass("ng-hide")})}}}]),ngar.directive("ngarSignedOut",["ngarAuthService",function(a){return{restrict:"A",link:function(b,c){b.$watch(function(){return!a.status.signedIn&&a.status.authInitialized},function(a){a?c.removeClass("ng-hide"):c.addClass("ng-hide")})}}}]),angular.module("angularGapiAnalyticsreporting").factory("ngarAuthService",["$rootScope","CLIENT_ID",function(a,b){var c,d="https://www.googleapis.com/auth/analytics.readonly",e={authInitialized:!1,signedIn:!1,user:"signed out"},f=function(){var a=c.currentUser.get();e.signedIn?e.user=a.getBasicProfile().getEmail():e.user="signed out"},g=function(b){e.signedIn=b,b?(f(),a.$broadcast("gapiAuth:signedin")):a.$broadcast("gapiAuth:signedOut")},h=function(a){return window.gapi.auth2.init({client_id:a||b,scope:d}).then(function(a){c=a,e.authInitialized=!0,g(c.isSignedIn.get()),c.isSignedIn.listen(g)})},i=function(){return c.signIn().then(function(){return g(c.isSignedIn.get()),e})},j=function(){return c.signOut().then(function(){return g(c.isSignedIn.get()),e})};return{initAuth:h,signIn:i,signOut:j,isSignedIn:function(){return c?c.isSignedIn.get():!1},status:e}}]),angular.module("angularGapiAnalyticsreporting").factory("ngarDataService",["ngarManagementService",function(a){var b={reports:[{data:[],dimensions:[],metrics:[],segments:[]}]},c=function(c){if(_.isUndefined(c))return b;var d=c.reports||[];return b.reports=d.map(function(b){var c=b.columnHeader.dimensions,d=b.columnHeader.metricHeader.metricHeaderEntries,e={},f={};c.forEach(function(b){"ga:segment"===b?e[b]="Segment":e[b]=a.items.metadata.find(function(a){return a.id===b}).uiName}),d.forEach(function(b){f[b.name]=a.items.metadata.find(function(a){return a.id===b.name}).uiName});var g=b.data.rows;return{data:g.map(function(a){var b={};return c.forEach(function(c,d){"ga:date"===c&&(b[e[c]]=new Date(moment(a.dimensions[d],"YYYYMMDD").format("YYYY-MM-DD"))),"ga:dateHour"===c?b[e[c]]=new Date(moment(a.dimensions[d],"YYYYMMDDHH").format("YYYY-MM-DD HH:MM:SS")):b[e[c]]=a.dimensions[d]}),d.forEach(function(c,d){b[f[c.name]]=parseInt(a.metrics[0].values[d])}),b}),dimensions:c.map(function(b){var c=[],d={};return g.forEach(function(a){-1===c.indexOf(a[b])&&c.push(a[b])}),d="ga:segment"===b?{id:"ga:segment",dataType:"STRING",description:"A segment",group:"Segment",type:"SEGMENT",uiName:"Segment"}:a.items.metadata.find(function(a){return a.id===b}),{name:d.uiName,metadata:d,items:c}}),metrics:d.map(function(b){var c=a.items.metadata.find(function(a){return a.id===b.name});return{name:c.uiName,metadata:c}}),segments:function(){var a=[];return g.forEach(function(b){-1===a.indexOf(b["ga:segment"])&&a.push(b["ga:segment"])}),a}()}}),b.reports};return{parseData:c,parsedData:b,cleanData:function(){b=[{data:[],dimensions:[],metrics:[],segments:[]}]},getItemsOfDimension:function(a){return b.dimensions.find(function(b){return b.name===a}).items}}}]),angular.module("angularGapiAnalyticsreporting").factory("ngarLoadService",["$rootScope","$document","$q",function(a,b,c){var d={gapiLoaded:!1,auth2Loaded:!1,analyticsV3Loaded:!1,analyticsV4Loaded:!1},e="https://apis.google.com/js/api.js",f="https://analyticsreporting.googleapis.com/$discovery/rest",g="https://www.googleapis.com/discovery/v1/apis/analytics/v3/rest",h=function(){var f=c.defer(),g=function(){a.$apply(function(){d.gapiLoaded=!0,f.resolve(window.gapi)})},h=function(b){a.$apply(function(){d.gapiLoaded=!1,f.reject(b)})},i=b[0].createElement("script");i.type="text/javascript",i.async=!0,i.src=e,i.onreadystatechange=function(){"complete"===this.readyState?g():h(this.readyState)},i.onload=g,i.onerror=h;var j=b[0].getElementsByTagName("body")[0];return j.appendChild(i),f.promise},i=function(){var a=c.defer();return d.gapiLoaded?window.gapi.load("client:auth2",function(b){d.auth2Loaded=!0,a.resolve(b)},function(b){a.reject(b)}):a.reject("google api not loaded"),a.promise},j=function(){var a=c.defer();return d.gapiLoaded?window.gapi.client.load(g).then(function(b){d.analyticsV3Loaded=!0,a.resolve(b)},function(b){a.reject(b)}):a.reject("google api not loaded"),a.promise},k=function(){var a=c.defer();return d.gapiLoaded?window.gapi.client.load(f).then(function(b){d.analyticsV4Loaded=!0,a.resolve(b)},function(b){a.reject(b)}):a.reject("google api not loaded"),a.promise};return{loadGapi:h,loadAuth2:i,loadGarV3:j,loadGarV4:k,loadAllApis:function(){return h().then(i).then(j).then(k)},status:d}}]),angular.module("angularGapiAnalyticsreporting").factory("ngarManagementService",function(){var a={accountsTreeLoaded:!1,segmentsLoaded:!1,metadataLoaded:!1},b={accountsTree:[],segments:[],metadata:[],selectedViewId:"",breadcrumbs:{}},c=function(a){return function(a){return a}},d=function(c){var d=c.result.items.map(function(a){var b={};return b.name=a.name,b.id=a.id,b.properties=a.webProperties.map(function(a){var b={};return b.name=a.name,b.id=a.id,b.views=a.profiles.map(function(a){var b={};return b.name=a.name,b.id=a.id,b}),b}),b});return b.accountsTree=d.slice(),a.accountsTreeLoaded=!0,d},e=function(){return window.gapi.client.analytics.management.accountSummaries.list().then(d,c("error updating account tree"))},f=function(c){var d=c.result.items.map(function(a){return _.pick(a,["name","segmentId","type","definition"])});return b.segments=d.slice(),a.segmentsLoaded=!0,d},g=function(){return window.gapi.client.analytics.management.segments.list().then(f,c("error updating segments"))},h=function(c){var d=c.result.items.filter(function(a){return"PUBLIC"===a.attributes.status}).map(function(a){var b={id:a.id,allowedInSegments:a.attributes.allowedInSegments,dataType:a.attributes.dataType,description:a.attributes.description,group:a.attributes.group,type:a.attributes.type,uiName:a.attributes.uiName,calculation:"none"};return a.attributes.calculation&&(b.calculation=a.attributes.calculation),b});return b.metadata=d.slice(),a.metadataLoaded=!0,d},i=function(){return window.gapi.client.analytics.metadata.columns.list({reportType:"ga"}).then(h,c("error updating metadata"))},j=function(){var a=window.gapi.client.newBatch();return a.add(window.gapi.client.analytics.management.accountSummaries.list(),{id:"accounts"}),a.add(window.gapi.client.analytics.management.segments.list(),{id:"segments"}),a.add(window.gapi.client.analytics.metadata.columns.list({reportType:"ga"}),{id:"metadata"}),a.then(function(a){return{accountsTree:d(a.result.accounts),segments:f(a.result.segments),metdata:h(a.result.metadata)}})},k=function(a){var c={};return b.accountsTree.forEach(function(b){b.properties.forEach(function(d){d.views.forEach(function(e){return e.id===a?void(c={account:b.name,property:d.name,view:e.name}):void 0})})}),c};return{init:j,queryAccounts:function(){return e.then(d)},querySegments:function(){return g.then(f)},queryMetadata:function(){return i.then(h)},items:b,getBreadcrumbs:k,status:a}}),angular.module("angularGapiAnalyticsreporting").factory("ngarReportService",["$q","ngarAuthService",function(a,b){var c={params:[{viewId:"",dateStart:new Date,dateEnd:new Date,dimensions:[],metrics:[],segments:[],filters:[]}],json:{},rawData:[]},d=function(){c.params=[{viewId:"",dateStart:new Date,dateEnd:new Date,dimensions:[],metrics:[],segments:[],filters:[]}]},e=function(a){return _.isArray(a)&&(c.params=a),c.json={reportRequests:c.params.map(function(a){return{viewId:a.viewId,dateRanges:[{startDate:moment(a.dateStart).format("YYYY-MM-DD"),endDate:moment(a.dateEnd).format("YYYY-MM-DD")}]}})},c.params.forEach(function(a,b){c.json.reportRequests[b].dimensions=a.dimensions.map(function(a){return _.isObject(a)?{name:a.id}:_.isString(a)?{name:a}:void 0}),c.json.reportRequests[b].metrics=a.metrics.map(function(a){return _.isObject(a)?{expression:a.id}:_.isString(a)?{expression:a}:void 0}),_.isEmpty(a.segments)||(c.json.reportRequests[b].dimensions.push({name:"ga:segment"}),c.json.reportRequests[b].segments=a.segments.map(function(a){return _.isObject(a)?{segmentId:a.segmentId}:_.isString(a)?{segmentId:a}:void 0})),_.isEmpty(a.filters)||(c.json.reportRequests[b].dimensionFilterClauses=a.filters.map(function(a){return{dimensionName:a.dimension.id,operator:a.operator.operator,expressions:"IN_LIST"===a.operator.operator?a.expression.split(","):a.expression}}))}),c.json},f=function(e,f){var g=a.defer();b.isSignedIn||g.reject("user not signed in");var h=f||c.json;return e.client.analyticsreporting.reports.batchGet(h).then(function(a){c.rawData=a.result,g.resolve(a.result)},function(a){g.reject(a)}),d(),g.promise},g=function(a){c.params[0].viewId=a};return{buildRequest:e,getData:f,updateViewId:g,params:c.params,request:c}}]);